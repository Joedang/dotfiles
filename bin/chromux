#!/bin/bash
# set up the default tmux session for my chromebook
# based off of https://github.com/aaronhalford/tmux-scripts

sn='chromux' # session name
defDir=$HOME # default directory
prevDir=`pwd`
echo changing to $defDir
cd $defDir

echo Checking for existing $sn session.
tmux has-session -t $sn
if [ $? != 0 ] 
then
	echo No $sn session found. Starting a new one.

	# system monitoring and graphical server
	#/----------------------------------------------\
	#|		(1) disk usage			|
	#|----------------------------------------------|
	#|		(2) tor client			|
	#|----------------------------------------------|
	#|	(3) unity	|	(4) htop	|
	#|			|			|
	#\----------------------------------------------/
	echo starting a window 
	tmux new-session -s $sn -n sys -d $@
	tmux send-keys -t $sn:1 "cd $defDir" C-m # get into HOME by default
	tmux send-keys -t $sn:1 'watch -n 10 df -h / ~/SD' C-m # watch disk usage
	echo starting a new pane for unity
	tmux split-window
	tmux send-keys -t $sn 'startunity' # enter command but don't run it yet
	tmux split-window -h
	echo starting a new pane for htop
	tmux send-keys -t $sn 'htop --sort-key PERCENT_MEM' C-m # watch resources
	echo starting a pane for tor
	tmux split-window -t $sn:1.1
	tmux send-keys -t $sn:1.2 'tor' C-m # start a tor client
	# Note: this is not a transparent proxy. You must attach to it as a
	# SOCKS proxy later. (It's easiest to just use a browser extension.)
	# This renaming stuff has no effect, AFAICT:
	# tmux set-window-option -g automatic-rename off
	# tmux rename-window -t $sn:1 sys

	# jupyter server
	echo starting a window for jupyter
	tmux new-window -n jupyter
	tmux send-keys -t $sn:jupyter 'jupyter notebook --no-browser' C-m

	# general shell
	echo starting a window for a general shell
	tmux new-window
	tmux send-keys 'cls' C-m
else
	echo $sn session found. 
fi
echo Attaching.
tmux attach -t $sn
echo Changing back to $prevDir 
cd $prevDir
