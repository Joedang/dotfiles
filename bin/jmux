#!/bin/bash
# set up the default tmux session for Gallium on my PEPPY Chromebook


sn='jmux' # session name
defDir=$HOME # default directory
prevDir=`pwd`
echo changing to $defDir
cd $defDir

# if a tmux server isn't running, start it
if [ ! pgrep -x tmux ]
then
    echo Starting tmux server. 
    tmux start-server
    echo Sleeping for asynchony shenanigans.
    sleep 1
fi
echo Checking for existing $sn session.
tmux list-sessions
tmux has-session -t $sn
if [ $? != 0 ] 
then
    echo -e "color test: \e[38;5;82mHello \e[38;5;198mWorld\e[0m"
	echo No $sn session found. Starting a new one.

    # WINDOW: system monitoring
    # (enumeration may no longer be accurate...)
    #/----------------------------------------------\
    #|    (1) disk usage    |                       |
    #|----------------------|    (3) utility pane   |
    #|    (4)               |                       |
    #|----------------------|                       |
    #|    (5) memWatcher    |                       |
    #|----------------------------------------------|
    #|            (2) htop                          |
    #|----------------------------------------------|
    #|           (6) rainbow clock                  |
    #\----------------------------------------------/
    # commands are preceded with a space to keep them out of the shell history, for clarity
    echo starting a window for disk monitoring 
    # echo TERM is $TERM
    # echo -e "color test: \e[38;5;82mHello \e[38;5;198mWorld\e[0m"
    tmux -2 new-session -d -s $sn -n sys #-d $@
    tmux set-window-option -t $sn:1 allow-rename off
    echo configuring window...
    tmux send-keys -t $sn:1 " cd $defDir" C-m # get into HOME by default
    tmux send-keys -t $sn:1 ' watch -n 10 df -h .' C-m # watch disk usage
    echo starting a new pane for htop
    tmux split-window
    tmux send-keys -t $sn ' htop --sort-key PERCENT_MEM' C-m # watch resources
    echo starting a utility pane
    tmux split-window -h -t $sn:1.1
    # tmux send-keys -t $sn ' cmatrix' C-m # pretty
    #echo starting a pane for the xkb steward
    echo starting an empty pane
    tmux split-window -t $sn:1.1
    #tmux send-keys -t $sn:1.4 ' ./.xkb/recomp.sh' C-m
    #tmux send-keys -t $sn:1.4 ' ./.xkb/xkbSteward.sh' C-m
    echo starting a pane for the rainbow clock
    tmux split-window -t $sn:1.2
    tmux send-keys -t $sn:1.5 ' rainbowClock' C-m
    tmux split-window -t $sn:1.4
    #tmux send-keys -t $sn:1.5 ' memWatcher' C-m
    
    #resize panes
    tmux resize-pane -t $sn:1.3 -y 8 # top right utility pane
    tmux resize-pane -t $sn:1.1 -y 4 # disk watching pane
    tmux resize-pane -t $sn:1.6 -y 3 # rainbow clock
    
    # WINDOW: cmus
    echo starting a window for cmus
    tmux new-window
    tmux send-keys -t $sn:2 ' cmus' C-m
    tmux set-window-option -t $sn:2 allow-rename off
    
    # WINDOW: GUI Launcher
    echo starting a window for launching GUIs
    tmux new-window -n 'gui'
    tmux set-window-option -t $sn:3 allow-rename off
    tmux send-keys -t $sn:3.1 ' firefox'
    tmux split-window -t $sn:3.1
    tmux send-keys -t $sn:3.2 " tb"
    tmux split-window -t $sn:3.2
    tmux send-keys -t $sn:3.3 " signal-desktop"
    tmux split-window -t $sn:3.3
    tmux send-keys -t $sn:3.4 " thunderbird"
    tmux split-window -t $sn:3.4
    
    # WINDOW: general shell
    echo starting a window for a general shell
    tmux new-window
    tmux send-keys -t $sn:4 ' home' C-m
    echo Run "$sn" again to attach.
else
	echo $sn session found. 
    tmux -2 attach -t $sn
fi
# For whatever reason, automatically attaching breaks 256 color support...
# echo Attaching.
# echo -e "color test: \e[38;5;82mHello \e[38;5;198mWorld\e[0m"
# tmux attach -t $sn
echo Changing back to $prevDir 
cd $prevDir
