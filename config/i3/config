# vim: foldmethod=marker: set nowrap
# info {{{
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# mod1 is Alt
# mod4 is Super
# }}}

# general settings {{{
# use Super as the modifier
set $mod Mod4
#exec --no-startup-id picom -b # see ~/.config/picom.conf
#exec_always to run something during a restart of i3
exec picom -b # see ~/.config/picom.conf

# The keyboard mapping is pretty buggy the way I'm doing it.
# The i3 config may be the wrong place to do this.
#exec_always setxkbmap -layout us -option # reset the keyboard layout
#exec_always setxkbmap -option caps:escape # use the CapsLock key as escape
# Map the physical "Esc" keycode to send the super keysym.
# This must be done after setxkbmap.
# exec_always xmodmap -e "keycode 9 = Super_L" # this undoes the caps:escape remapping when restarting i3 twice in a row...??

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font IBM Plex Sans:Regular 20
#font LAYOUT_ENGINE:FAMILY_LIST [STYLE_OPTIONS] [SIZE]
font pango:'IBM Plex Sans' 'Regular' 7

#font pango:monospace 8
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# mouse settings
# xinput --list # get the names/IDs of the input devices
# xinput --list-props 11 12 # get the properties of the mouse devices
# You must restart i3 for these changes to take effect. These values must be between 0 and 1.
exec_always xinput --set-prop "SynPS/2 Synaptics TouchPad" "libinput Accel Speed" 0.8 # set touchpad sensitivity
exec_always xinput --set-prop "SynPS/2 Synaptics TouchPad" "libinput Tapping Enabled" 1 # tap to left-click
exec_always xinput --set-prop "TPPS/2 IBM TrackPoint" "libinput Accel Speed" 1 # set trackpoint sensitivity

# lock when the lid is closed, screensaver activated, etc. 
exec_always xss-lock -- i3lock -i $HOME/img/lock --show-failed-attempt 
# suspend/sleep the system (triggering a lock as well; also shows the lock screen before suspending)
bindsym $mod+Ctrl+l exec systemctl suspend
bindsym Ctrl+Mod1+l exec systemctl suspend
# just lock the screen
# bindsym $mod+Ctrl+l exec i3lock -i $HOME/img/lock --show-failed-attempt
# bindsym Ctrl+Mod1+l exec i3lock -i $HOME/img/lock --show-failed-attempt
# }}}

# key bindings {{{
# media/function keys {{{
set $audioNotifyID 1
set $audioNotifyDelay 2000
#set $audioNotify dunstify -r $audioNotifyID -u low -t $audioNotifyDelay 
set $volumeIncrement 5
set $brightnessNotifyID 2
set $brightnessNotifyDelay 2000
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume \
        exec --no-startup-id \
        pactl set-sink-volume @DEFAULT_SINK@ +$volumeIncrement% \
        && $refresh_i3status \
        && dunstify -r $audioNotifyID -u low -t $audioNotifyDelay -a SettingsNotify 'ðŸ”Š '$( pactl list sinks | grep -m 1 Volume: | grep -o '[[:digit:]]*%' | head -n 1)
bindsym XF86AudioLowerVolume \
        exec --no-startup-id \
        pactl set-sink-volume @DEFAULT_SINK@ -$volumeIncrement% \
        && $refresh_i3status \
        && dunstify -r $audioNotifyID -u low -t $audioNotifyDelay -a SettingsNotify 'ðŸ”‰ '$(pactl list sinks | grep -m 1 Volume: | grep -o '[[:digit:]]*%' | head -n 1)
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute \
        exec --no-startup-id \
        pactl set-sink-mute @DEFAULT_SINK@ toggle \
        && $refresh_i3status \
        && dunstify -r $audioNotifyID -u low -t $audioNotifyDelay -a SettingsNotify $(pactl list sinks | grep -Pom 1 '(?<=Mute: ).*' | sed -e 's/yes/ðŸ”‡ muted/' -e 's/no/ðŸ”Š un-muted/')
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute \
        exec --no-startup-id \
        pactl set-source-mute @DEFAULT_SOURCE@ toggle \
        && $refresh_i3status #\
        #&& dunstify -r $audioNotifyID -u low -t $audioNotifyDelay $(pactl list sinks | grep -Pom 1 '(?<=Mute: ).*' | sed -e 's/yes/ðŸ”‡ muted/' -e 's/no/ðŸ”Š un-muted/')
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# media keys
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# adjust brightness with function keys
# For some reason, these function keys get bypassed in a weird way, so these bindings never get called.
bindsym XF86MonBrightnessUp         exec --no-startup-id xbacklight -inc 5  -time 100 -steps 10
bindsym Shift+XF86MonBrightnessUp   exec --no-startup-id xbacklight -inc 10 -time 100 -steps 10
bindsym XF86MonBrightnessDown       exec --no-startup-id xbacklight -dec 5  -time 100 -steps 10
bindsym Shift+XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10 -time 100 -steps 10
#bindsym $mod+F8 exec --no-startup-id dunstify -r $brightnessNotifyID -u low -t $brightnessNotifyDelay -a SettingsNotify  'ðŸŒž '$(cat /sys/class/backlight/acpi_video0/brightness)/15
# }}}

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill
bindsym mod1+F4 kill

# rerun the capsRemap script
bindsym $mod+c exec /home/joedang/src/dotfiles/bin/capsRemap

# launchers {{{
# start a terminal
bindsym $mod+Return exec kitty

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
bindsym $mod+F2 exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# simple calculator (just passes a string to calc)
bindsym $mod+equal exec echo "" | dmenu -p "calc:" -l 0 | calc | xargs -II dmenu -p \"I\"

# simple unit conversion (just passes a string to units)
bindsym $mod+u exec \
                    units --compact --one-line --verbose \
                        $(echo '' | dmenu -p 'you have: ') $(echo '' | dmenu -p 'you want: ') \
                        | xargs -II dmenu -p 'I'
bindsym $mod+Shift+u exec --no-startup-id /home/joedang/src/dotfiles/bin/dmenu-unicode

# set the background
#bindsym $mod+b exec find -L ~/img/backgrounds -printf '%f\n' | dmenu -i -l 10 -p 'select a new background' | 
bindsym $mod+b exec --no-startup-id \
                    find -L ~/img/backgrounds -printf '%P\n' \
                        | dmenu -i -l 10 -p 'select a new background' \
                        | xargs -II feh --bg-fill ~/img/backgrounds/"I"
bindsym $mod+Shift+b exec --no-startup-id \
                    find -L ~/img/backgrounds  -printf '%p\n' \
                        | grep '\.' \
                        | sort -R \
                        | head -n 1 \
                        | xargs feh --bg-fill

# mount and unmount removable storage devices (flash drives, SD cards, external disks)
bindsym $mod+m exec ~/src/dotfiles/bin/dmenu-mount
bindsym $mod+Shift+m exec ~/src/dotfiles/bin/dmenu-umount

# bindsym Print exec xfce4-screenshooter --save $HOME/img/capture/Screenshot_$(date +%Y-%m-%d_%H-%M-%S).png
# bindsym Ctrl+Print exec xfce4-screenshooter --fullscreen --save $HOME/img/capture/Screenshot_$(date +%Y-%m-%d_%H-%M-%S).png
bindsym --release Print exec "scrot -sfl style=dash,color=red -e 'mv $f ~/img/capture/; xclip -selection clipboard -t image/png ~/img/capture/$f'"
bindsym --release Ctrl+Print exec scrot -e 'mv $f ~/img/capture/'
# }}}

# window navigation {{{
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+bar split h

# split in vertical orientation
bindsym $mod+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# jump between windows by name, similar to Alt+Tab in popular DEs
bindsym $mod+Tab exec --no-startup-id wmctrl -l | dmenu -i -p "switch to window" -l $(wmctrl -l | wc -l) | xargs -II wmctrl -i -a \"I\"

# }}}

# containers {{{
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child
# }}}
# }}}

# workspaces {{{
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws0 "0"
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# switch to workspace
bindsym $mod+0 workspace number $ws0
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9

# move focused container to workspace
bindsym $mod+Shift+0 move container to workspace number $ws0
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
# }}}

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# restart picom
bindsym $mod+Shift+p exec "bash -c 'pkill picom && sleep 1 && picom -b'"
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that) {{{
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        bindsym $mod+h resize shrink width 200 px or 200 ppt
        bindsym $mod+j resize grow height 200 px or 200 ppt
        bindsym $mod+k resize shrink height 200 px or 200 ppt
        bindsym $mod+l resize grow width 200 px or 200 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
# }}}

# styling {{{

# set the border size
# You can also use any non-zero value if you'd like to have a border
#default_border pixel 2
default_border normal
#for_window [class=".*"] border pixel 3

#for_window [layout="stacking"] border normal 2

# set gap sizes
gaps inner 6
gaps outer 0
smart_gaps on # no gaps for a loneley window

# class                 border  backgr. text    indicator child_border
#                       purple  purple  white   purple    purple
client.focused          #530093 #530093 #eeeeee #8b00dd   #8b00dd

# defaults
#client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
#client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
#client.unfocused        #333333 #222222 #888888 #292d2e   #222222
#client.urgent           #2f343a #900000 #ffffff #900000   #900000
#client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
#
#client.background       #ffffff

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
    # the bar is configured in ~/.config/i3status/config
    status_command i3status 
    tray_output primary
    i3bar_command i3bar --transparency
    font pango:'IBM Plex Sans' 'Regular' 9

    colors {
        background #111111cc
        statusline #dddddd
        separator #8b00dd


        #<colorclass>   <border> <background> <text>
        focused_workspace  #4c7899 #8b00dd #ffffff
        active_workspace   #333333 #5f676a #ffffff
        inactive_workspace #333333 #222222 #888888
        urgent_workspace   #2f343a #900000 #ffffff
        binding_mode       #2f343a #900000 #ffffff
    }
}

exec bgset
# }}}
